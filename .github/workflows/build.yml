name: Build

on:
  pull_request:
    branches:
      - build_workflow
    paths:
      - 'manifest.json'
      - 'templates/**'
      - '.github/workflows/**'

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@v2
    - id: set-matrix
      run: |
        JSON=$(cat ./manifest.json | jq [.[][]])
        JSON="${JSON//'%'/'%25'}"
        JSON="{\"include\":$JSON}"
        echo $JSON
        echo "-----------------------"
        echo "::set-output name=matrix::${JSON}"
  build:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.prepare.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v2
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.javaVersion }}
      - name: Build with Maven
        if: ${{ matrix.dependencyManager == 'maven' }}
        run: mvn -B package --file ${{ matrix.directory }}/"{{ cookiecutter.project_slug }}"/HelloWorldFunction/pom.xml
      - name: Build with Gradle
        if: ${{ matrix.dependencyManager == 'gradle' }}
        run: |
          cd ./${{ matrix.directory }}/"{{ cookiecutter.project_slug }}"/HelloWorldFunction/
          ./gradlew build

  auto-merge:
    runs-on: ubuntu-latest
    needs: [ build ]
    if: github.base_ref == 'build_workflow' && github.actor == 'vitodegiosa'
    steps:
      - uses: actions/github-script@0.2.0
        with:
          script: |
            github.pullRequests.createReview({
              owner: context.payload.repository.owner.login,
              repo: context.payload.repository.name,
              pull_number: context.payload.pull_request.number,
              event: 'APPROVE'
            })
            github.pullRequests.merge({
              owner: context.payload.repository.owner.login,
              repo: context.payload.repository.name,
              pull_number: context.payload.pull_request.number,
              merge_method: 'squash'
            })
          github-token: ${{ secrets.AUTOMERGE }}

